[gd_scene load_steps=92 format=3 uid="uid://cp5du4n6j8tbm"]

[ext_resource type="PackedScene" uid="uid://cmt0k5vghfm35" path="res://projectiles/Potions/DamagePotion/DamagePotion.tscn" id="1_bd8l1"]
[ext_resource type="Texture2D" uid="uid://cga7gmr45ukhy" path="res://assets/sprites/attacks/explosion/blood_explosion.png" id="5_tiwid"]
[ext_resource type="Texture2D" uid="uid://mimnl2g76xwc" path="res://assets/sprites/characters/bosses/chemist_boss/chemist.png" id="6_usjmb"]
[ext_resource type="PackedScene" uid="uid://cfqffrmv32wct" path="res://ui/HealthBar/health_bar.tscn" id="7_8xpwy"]

[sub_resource type="GDScript" id="GDScript_kf6yr"]
script/source = "extends CharacterBody2D

@onready var _animated_sprite: AnimatedSprite2D = $AnimatedSprite2D
@export var damage_potion_scene: PackedScene 

@onready var health_bar = $HealthBar

@export var max_health: int = 150  # Maximum health
var current_health: int

@export var min_attack_interval: float = 3.0  # Minimum interval between attacks
@export var max_attack_interval: float = 8.0  # Maximum interval between attacks

var current_target: Vector2 = Vector2.ZERO  # The current waypoint the boss is moving to
@export var move_speed: float = 150.0         # Movement speed
@export var proximity_threshold: float = 10.0   # How close to the target before picking a new one

@export var min_wait_time: float = 0.8  # Minimum wait time between moves
@export var max_wait_time: float = 2.5  # Maximum wait time between moves

var last_animation: String = \"idle_down\"
var is_attacking: bool = false  # Used to prevent movement animations from interrupting attack animations

var attack_timer: Timer

func _ready() -> void:
	current_health = max_health
	health_bar.init_health(current_health)
	
	move_to_next_waypoint()
	
	attack_timer = Timer.new()
	attack_timer.one_shot = true
	add_child(attack_timer)
	attack_timer.connect(\"timeout\", Callable(self, \"_choose_and_execute_attack\"))
	_start_random_attack_timer()

func choose_random_waypoint() -> Vector2:
	var min_x = 24 + 50
	var max_x = 1133 - 50
	var min_y = -800 + 50
	var max_y = -51 - 50
	return Vector2(randf_range(min_x, max_x), randf_range(min_y, max_y))

func move_to_next_waypoint():
	current_target = choose_random_waypoint()

func _physics_process(delta: float) -> void:
	if current_target != Vector2.ZERO:
		var direction = (current_target - global_position).normalized()
		velocity = direction * move_speed
		if not is_attacking:
			if abs(direction.x) > abs(direction.y):
				if direction.x > 0:
					play_animation(\"walk_right\")
				else:
					play_animation(\"walk_left\")
			else:
				if direction.y > 0:
					play_animation(\"walk_down\")
				else:
					play_animation(\"walk_up\")
		move_and_slide()
		if global_position.distance_to(current_target) <= proximity_threshold:
			velocity = Vector2.ZERO
			current_target = Vector2.ZERO
			play_idle_animation()
			start_wait_timer()
	else:
		velocity = Vector2.ZERO
		play_idle_animation()

func start_wait_timer():
	var wait_time = randf_range(min_wait_time, max_wait_time)
	await get_tree().create_timer(wait_time).timeout
	move_to_next_waypoint()

# Helper function to find the player.
func get_player() -> Node2D:
	var player = get_parent().get_node(\"ForegroundTiles/Player\")
	if player:
		return player
	else:
		print(\"Player not found!\")
		return null

# Adds a projectile to a container if available; otherwise adds it as a child.
func add_projectile(projectile: Node) -> void:
	var container = get_parent().get_node(\"ProjectileContainer\")
	if container:
		container.add_child(projectile)
	else:
		add_child(projectile)

##################################################
# ATTACK 1: Single Damage Potion Projectile
##################################################
func attack_throw_damage_potion() -> void:
	if not damage_potion_scene:
		print(\"DamagePotion scene not set!\")
		return
	var player = get_player()
	if not player:
		return
	
	is_attacking = true
	
	# Instantiate and add the damage potion projectile.
	var projectile = damage_potion_scene.instantiate()
	add_projectile(projectile)
	projectile.global_position = global_position
	
	# Calculate the direction toward the player.
	var direction: Vector2 = (player.global_position - global_position).normalized()
	projectile.velocity = direction * 175 # Adjust speed of potion here
	projectile.scale = Vector2(1.5, 1.5)
	
	# Play the appropriate attack animation.
	play_spell_animation(direction)
	await _animated_sprite.animation_finished
	is_attacking = false

##################################################
# ATTACK 2: Spread of 3 Damage Potion Projectiles
##################################################
func attack_throw_damage_potion_spread() -> void:
	if not damage_potion_scene:
		print(\"DamagePotion scene not set!\")
		return
	var player = get_player()
	if not player:
		return
	
	is_attacking = true
	
	# Determine the base direction toward the player.
	var base_direction: Vector2 = (player.global_position - global_position).normalized()
	var base_angle: float = base_direction.angle()
	
	# Configure the spread: 3 projectiles with a total angular spread of 30Â° (PI/6 radians).
	var spread_count: int = 3
	var angle_range: float = PI / 6  
	
	# Spawn each projectile with an even angular offset.
	for i in range(spread_count):
		var t: float = float(i) / (spread_count - 1) if spread_count > 1 else 0.5
		var offset_angle: float = lerp(-angle_range / 2, angle_range / 2, t)
		var projectile_angle: float = base_angle + offset_angle
		var projectile = damage_potion_scene.instantiate()
		add_projectile(projectile)
		projectile.global_position = global_position
		projectile.velocity = Vector2.RIGHT.rotated(projectile_angle) * 175
		projectile.scale = Vector2(1.5, 1.5)
		# Small delay between each projectile (optional)
		await get_tree().create_timer(0.1).timeout
	
	play_spell_animation(base_direction)
	await _animated_sprite.animation_finished
	is_attacking = false

##################################################
# Helper Animation Functions
##################################################
func play_spell_animation(direction: Vector2) -> void:
	if abs(direction.x) > abs(direction.y):
		if direction.x > 0:
			play_animation(\"slash_right\")
		else:
			play_animation(\"slash_left\")
	else:
		if direction.y > 0:
			play_animation(\"slash_down\")
		else:
			play_animation(\"slash_up\")

func play_animation(anim_name: String) -> void:
	if _animated_sprite.animation != anim_name:
		_animated_sprite.play(anim_name)
		last_animation = anim_name

func play_idle_animation() -> void:
	if \"down\" in last_animation:
		play_animation(\"idle_down\")
	elif \"up\" in last_animation:
		play_animation(\"idle_up\")
	elif \"left\" in last_animation:
		play_animation(\"idle_left\")
	elif \"right\" in last_animation:
		play_animation(\"idle_right\")
	else:
		play_animation(\"idle_down\")

##################################################
# ATTACK LOGIC (Only two attacks are used in this version)
##################################################
var attacks = [
	{
		\"name\": \"attack_throw_damage_potion\",
		\"function\": Callable(self, \"attack_throw_damage_potion\"),
		\"weight\": 3,
		\"unlocked\": true
	},
	{
		\"name\": \"attack_throw_damage_potion_spread\",
		\"function\": Callable(self, \"attack_throw_damage_potion_spread\"),
		\"weight\": 2,
		\"unlocked\": true
	}
]

func _start_random_attack_timer():
	var wait_time = randf_range(min_attack_interval, max_attack_interval)
	attack_timer.wait_time = wait_time
	attack_timer.start()
	print(\"Attack timer started, next attack in \", wait_time, \" seconds\")

@export var quick_succession_chance: float = 0.25
@export var quick_succession_delay: float = 0.8

func _choose_and_execute_attack() -> void:
	var available_attacks = []
	for attack in attacks:
		if attack.unlocked:
			available_attacks.append(attack)
	if available_attacks.size() == 0:
		print(\"No available attacks!\")
		_start_random_attack_timer()
		return
	var total_weight: float = 0.0
	for attack in available_attacks:
		total_weight += attack.weight
	var random_value = randf() * total_weight
	var cumulative_weight: float = 0.0
	for attack in available_attacks:
		cumulative_weight += attack.weight
		if random_value <= cumulative_weight:
			attack.function.call()
			if randf() < quick_succession_chance:
				print(\"Quick succession triggered!\")
				await _perform_quick_succession_attack(available_attacks)
			break
	_start_random_attack_timer()

func _perform_quick_succession_attack(available_attacks: Array) -> void:
	await get_tree().create_timer(quick_succession_delay).timeout
	var total_weight: float = 0.0
	for attack in available_attacks:
		total_weight += attack.weight
	var random_value = randf() * total_weight
	var cumulative_weight: float = 0.0
	for attack in available_attacks:
		cumulative_weight += attack.weight
		if random_value <= cumulative_weight:
			attack.function.call()
			break
"

[sub_resource type="CircleShape2D" id="CircleShape2D_0s22d"]
radius = 10.0499

[sub_resource type="AtlasTexture" id="AtlasTexture_5kv14"]
atlas = ExtResource("5_tiwid")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bcpnh"]
atlas = ExtResource("5_tiwid")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_v8nqs"]
atlas = ExtResource("5_tiwid")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_88vhn"]
atlas = ExtResource("5_tiwid")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_yyr7p"]
atlas = ExtResource("5_tiwid")
region = Rect2(320, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_k2rft"]
atlas = ExtResource("5_tiwid")
region = Rect2(384, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_3g0ok"]
atlas = ExtResource("5_tiwid")
region = Rect2(448, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_fxqpr"]
atlas = ExtResource("5_tiwid")
region = Rect2(448, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_abace"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gehxo"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_tgsgw"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_dlrdq"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_po0j0"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gl1lc"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_nufjy"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_l0pa7"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_n76pa"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_itlxu"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ihwfm"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bknyv"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_i04bw"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_x1844"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_s1jw8"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ll763"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_va1ls"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_mqi65"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7olau"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_tec3a"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kg6uh"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jy7fu"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qyoqx"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6b7oj"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_q8rm3"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_mgfey"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_dv48i"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_3q55x"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_a5n7m"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ic8ao"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_4allx"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5o5en"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_vyeh8"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_2o2bn"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_m3vyw"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xot4w"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_p2cqk"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_s2un8"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_klfg3"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7y4t3"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_octcm"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ol2dr"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xuuqu"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6wtb6"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qs1e1"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8qbrl"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_61lfq"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_lhdng"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_dkrk2"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1723a"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ip36c"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8romh"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1u235"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jtxur"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ava1w"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qo1uh"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6wh6k"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_j1e54"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_msf8n"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bgkt4"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qt823"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_e8s3b"]
atlas = ExtResource("6_usjmb")
region = Rect2(192, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xmtsa"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_g013l"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_x21sj"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qcaw7"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xpxyy"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_vyr10"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_3m4iv"]
atlas = ExtResource("6_usjmb")
region = Rect2(256, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_uys0y"]
atlas = ExtResource("6_usjmb")
region = Rect2(320, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5absq"]
atlas = ExtResource("6_usjmb")
region = Rect2(384, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xqdx8"]
atlas = ExtResource("6_usjmb")
region = Rect2(448, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_vlmjw"]
atlas = ExtResource("6_usjmb")
region = Rect2(512, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_coopu"]
atlas = ExtResource("6_usjmb")
region = Rect2(0, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_a6kd3"]
atlas = ExtResource("6_usjmb")
region = Rect2(64, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_65iao"]
atlas = ExtResource("6_usjmb")
region = Rect2(128, 448, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_vqgia"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5kv14")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bcpnh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v8nqs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_88vhn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yyr7p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k2rft")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3g0ok")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fxqpr")
}],
"loop": false,
"name": &"die",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_abace")
}],
"loop": true,
"name": &"idle_down",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_gehxo")
}],
"loop": true,
"name": &"idle_left",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tgsgw")
}],
"loop": true,
"name": &"idle_right",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_dlrdq")
}],
"loop": true,
"name": &"idle_up",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_po0j0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gl1lc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nufjy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l0pa7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_n76pa")
}],
"loop": false,
"name": &"slash_down",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_itlxu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ihwfm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bknyv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i04bw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x1844")
}],
"loop": false,
"name": &"slash_left",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_s1jw8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ll763")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_va1ls")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mqi65")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7olau")
}],
"loop": false,
"name": &"slash_right",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tec3a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kg6uh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jy7fu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qyoqx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6b7oj")
}],
"loop": false,
"name": &"slash_up",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_q8rm3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mgfey")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dv48i")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3q55x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a5n7m")
}],
"loop": false,
"name": &"spell_down",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ic8ao")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4allx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5o5en")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vyeh8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2o2bn")
}],
"loop": false,
"name": &"spell_left",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_m3vyw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xot4w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_p2cqk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_s2un8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_klfg3")
}],
"loop": false,
"name": &"spell_right",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7y4t3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_octcm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ol2dr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xuuqu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6wtb6")
}],
"loop": false,
"name": &"spell_up",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qs1e1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8qbrl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_61lfq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lhdng")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dkrk2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1723a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ip36c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8romh")
}],
"loop": true,
"name": &"walk_down",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_1u235")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jtxur")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ava1w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qo1uh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6wh6k")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_j1e54")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_msf8n")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bgkt4")
}],
"loop": true,
"name": &"walk_left",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qt823")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_e8s3b")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xmtsa")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g013l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x21sj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qcaw7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xpxyy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vyr10")
}],
"loop": true,
"name": &"walk_right",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_3m4iv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uys0y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5absq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xqdx8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vlmjw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_coopu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a6kd3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_65iao")
}],
"loop": true,
"name": &"walk_up",
"speed": 10.0
}]

[node name="ChemistBoss" type="CharacterBody2D" groups=["enemies"]]
collision_layer = 2
collision_mask = 7
script = SubResource("GDScript_kf6yr")
damage_potion_scene = ExtResource("1_bd8l1")
move_speed = 200.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
z_index = 1
position = Vector2(0, 17)
shape = SubResource("CircleShape2D_0s22d")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_vqgia")
animation = &"slash_down"
frame = 4
frame_progress = 1.0

[node name="HealthBar" parent="." instance=ExtResource("7_8xpwy")]
offset_left = -22.0
offset_top = -32.0
offset_right = 23.0
offset_bottom = -28.0
